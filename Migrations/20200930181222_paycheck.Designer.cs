// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApp.Models;

namespace ServerApp.Migrations
{
    [DbContext(typeof(BenefitsDataContext))]
    [Migration("20200930181222_paycheck")]
    partial class paycheck
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServerApp.Models.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AnnualCost")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Benefits");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Benefit");
                });

            modelBuilder.Entity("ServerApp.Models.BenefitDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BenefitId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(5, 4)");

                    b.HasKey("Id");

                    b.HasIndex("BenefitId");

                    b.ToTable("BenefitDiscount");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BenefitDiscount");
                });

            modelBuilder.Entity("ServerApp.Models.Paycheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BenefitsCost")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime?>("BenefitsCostCalculationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Paychecks");
                });

            modelBuilder.Entity("ServerApp.Models.PaycheckBenefitCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal>("AmountBeforeDiscounts")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("BenefitId")
                        .HasColumnType("int");

                    b.Property<int>("BenefitReceiverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("PaycheckId")
                        .HasColumnType("int");

                    b.Property<decimal>("ResidualAmount")
                        .HasColumnType("decimal(32,24)");

                    b.HasKey("Id");

                    b.HasIndex("BenefitId");

                    b.HasIndex("BenefitReceiverId");

                    b.HasIndex("PaycheckId");

                    b.ToTable("PaycheckBenefitCost");
                });

            modelBuilder.Entity("ServerApp.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("ServerApp.Models.DependentBenefit", b =>
                {
                    b.HasBaseType("ServerApp.Models.Benefit");

                    b.HasDiscriminator().HasValue("DependentBenefit");
                });

            modelBuilder.Entity("ServerApp.Models.EmployeeBenefit", b =>
                {
                    b.HasBaseType("ServerApp.Models.Benefit");

                    b.HasDiscriminator().HasValue("EmployeeBenefit");
                });

            modelBuilder.Entity("ServerApp.Models.NameStartsWithBenefitDiscount", b =>
                {
                    b.HasBaseType("ServerApp.Models.BenefitDiscount");

                    b.Property<string>("NameStartsWith")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasDiscriminator().HasValue("NameStartsWithBenefitDiscount");
                });

            modelBuilder.Entity("ServerApp.Models.Dependent", b =>
                {
                    b.HasBaseType("ServerApp.Models.Person");

                    b.Property<int>("DependentRelationshipToEmployee")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasIndex("EmployeeId");

                    b.HasDiscriminator().HasValue("Dependent");
                });

            modelBuilder.Entity("ServerApp.Models.Employee", b =>
                {
                    b.HasBaseType("ServerApp.Models.Person");

                    b.Property<decimal?>("AnnualGrossPay")
                        .HasColumnType("decimal(32, 2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("ServerApp.Models.BenefitDiscount", b =>
                {
                    b.HasOne("ServerApp.Models.Benefit", null)
                        .WithMany("BenefitDiscounts")
                        .HasForeignKey("BenefitId");
                });

            modelBuilder.Entity("ServerApp.Models.Paycheck", b =>
                {
                    b.HasOne("ServerApp.Models.Employee", "Employee")
                        .WithMany("Paychecks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Models.PaycheckBenefitCost", b =>
                {
                    b.HasOne("ServerApp.Models.Benefit", "Benefit")
                        .WithMany()
                        .HasForeignKey("BenefitId");

                    b.HasOne("ServerApp.Models.Person", "BenefitReceiver")
                        .WithMany()
                        .HasForeignKey("BenefitReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApp.Models.Paycheck", "Paycheck")
                        .WithMany("PaycheckBenefitsCosts")
                        .HasForeignKey("PaycheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServerApp.Models.Dependent", b =>
                {
                    b.HasOne("ServerApp.Models.Employee", "Employee")
                        .WithMany("Dependents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
